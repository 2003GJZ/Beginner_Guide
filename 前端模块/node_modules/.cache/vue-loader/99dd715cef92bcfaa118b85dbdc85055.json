{"remainingRequest":"D:\\大水管子\\Beginner_Guide\\前端模块\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\大水管子\\Beginner_Guide\\前端模块\\src\\views\\FileManager.vue?vue&type=style&index=0&id=e3939472&scoped=true&lang=css","dependencies":[{"path":"D:\\大水管子\\Beginner_Guide\\前端模块\\src\\views\\FileManager.vue","mtime":1748095267737},{"path":"D:\\大水管子\\Beginner_Guide\\前端模块\\node_modules\\css-loader\\dist\\cjs.js","mtime":1748024887609},{"path":"D:\\大水管子\\Beginner_Guide\\前端模块\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1748024879016},{"path":"D:\\大水管子\\Beginner_Guide\\前端模块\\node_modules\\postcss-loader\\src\\index.js","mtime":1748024887367},{"path":"D:\\大水管子\\Beginner_Guide\\前端模块\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1748024889641},{"path":"D:\\大水管子\\Beginner_Guide\\前端模块\\node_modules\\vue-loader\\lib\\index.js","mtime":1748024878761}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ci5maWxlLW1hbmFnZXIgewogIHBhZGRpbmc6IDIwcHg7Cn0KCi51cGxvYWQtYXJlYSB7CiAgbWFyZ2luLWJvdHRvbTogMzBweDsKICBwYWRkaW5nOiAyMHB4OwogIGJhY2tncm91bmQtY29sb3I6ICNmNWY3ZmE7CiAgYm9yZGVyLXJhZGl1czogNHB4Owp9CgoudXBsb2FkLWJveCB7CiAgZGlzcGxheTogZmxleDsKICBmbGV4LWRpcmVjdGlvbjogY29sdW1uOwogIGFsaWduLWl0ZW1zOiBjZW50ZXI7CiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7CiAgaGVpZ2h0OiAyMDBweDsKICBib3JkZXI6IDJweCBkYXNoZWQgI2RjZGZlNjsKICBib3JkZXItcmFkaXVzOiA2cHg7CiAgY3Vyc29yOiBwb2ludGVyOwogIG1hcmdpbi1ib3R0b206IDIwcHg7CiAgdHJhbnNpdGlvbjogYWxsIDAuM3M7Cn0KCi51cGxvYWQtYm94OmhvdmVyIHsKICBib3JkZXItY29sb3I6ICM0MDllZmY7Cn0KCi51cGxvYWQtaWNvbiB7CiAgZm9udC1zaXplOiA0OHB4OwogIGNvbG9yOiAjOTA5Mzk5OwogIG1hcmdpbi1ib3R0b206IDEwcHg7Cn0KCi51cGxvYWQtdGV4dCB7CiAgdGV4dC1hbGlnbjogY2VudGVyOwp9CgoudXBsb2FkLXRleHQgc3BhbiB7CiAgZm9udC1zaXplOiAxNnB4OwogIGNvbG9yOiAjNjA2MjY2Owp9CgoudXBsb2FkLXRleHQgcCB7CiAgbWFyZ2luLXRvcDogMTBweDsKICBjb2xvcjogIzkwOTM5OTsKICBmb250LXNpemU6IDE0cHg7Cn0KCi5wcmV2aWV3LWNvbnRhaW5lciB7CiAgZGlzcGxheTogZmxleDsKICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjsKICBhbGlnbi1pdGVtczogY2VudGVyOwogIG1pbi1oZWlnaHQ6IDMwMHB4Owp9CgoucHJldmlldy1pbWFnZSB7CiAgbWF4LXdpZHRoOiAxMDAlOwogIG1heC1oZWlnaHQ6IDUwMHB4Owp9CgoucHJldmlldy1mcmFtZSB7CiAgd2lkdGg6IDEwMCU7CiAgaGVpZ2h0OiA1MDBweDsKICBib3JkZXI6IG5vbmU7Cn0KCi5wcmV2aWV3LXVuc3VwcG9ydGVkIHsKICB0ZXh0LWFsaWduOiBjZW50ZXI7CiAgcGFkZGluZzogMzBweDsKfQoKLmRhbmdlci10ZXh0IHsKICBjb2xvcjogI2Y1NmM2YzsKfQo="},{"version":3,"sources":["FileManager.vue"],"names":[],"mappings":";AAwOA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA","file":"FileManager.vue","sourceRoot":"src/views","sourcesContent":["<template>\n  <div class=\"file-manager\">\n    <h1>文件管理</h1>\n    \n    <!-- 文件上传区域 -->\n    <div class=\"upload-area\">\n      <h2>上传文件</h2>\n      <div class=\"upload-box\" @click=\"triggerFileInput\" @dragover.prevent @drop.prevent=\"handleFileDrop\">\n        <input type=\"file\" ref=\"fileInput\" @change=\"handleFileChange\" style=\"display: none\" />\n        <div class=\"upload-icon\">\n          <i class=\"el-icon-upload\"></i>\n        </div>\n        <div class=\"upload-text\">\n          <span>点击或拖拽文件到此处上传</span>\n          <p>支持jpg, png, pdf等常见格式，单个文件不超过10MB</p>\n        </div>\n      </div>\n      <el-button type=\"primary\" @click=\"uploadFile\" :loading=\"uploading\" :disabled=\"!selectedFile\">\n        上传文件\n      </el-button>\n    </div>\n\n    <!-- 文件列表区域 -->\n    <div class=\"file-list\">\n      <h2>我的文件</h2>\n      <el-table :data=\"fileList\" style=\"width: 100%\" v-loading=\"loading\">\n        <el-table-column label=\"文件名\" prop=\"fileName\"></el-table-column>\n        <el-table-column label=\"类型\" width=\"120\">\n          <template slot-scope=\"scope\">\n            <span>{{ getFileTypeLabel(scope.row.fileType) }}</span>\n          </template>\n        </el-table-column>\n        <el-table-column label=\"大小\" width=\"120\">\n          <template slot-scope=\"scope\">\n            <span>{{ formatFileSize(scope.row.fileSize) }}</span>\n          </template>\n        </el-table-column>\n        <el-table-column label=\"上传时间\" width=\"180\" prop=\"uploadAt\"></el-table-column>\n        <el-table-column label=\"操作\" width=\"200\">\n          <template slot-scope=\"scope\">\n            <el-button type=\"text\" @click=\"previewFile(scope.row)\">预览</el-button>\n            <el-button type=\"text\" @click=\"downloadFile(scope.row)\">下载</el-button>\n            <el-button type=\"text\" class=\"danger-text\" @click=\"deleteFile(scope.row)\">删除</el-button>\n          </template>\n        </el-table-column>\n      </el-table>\n    </div>\n\n    <!-- 文件预览对话框 -->\n    <el-dialog title=\"文件预览\" :visible.sync=\"previewVisible\" width=\"70%\">\n      <div class=\"preview-container\" v-if=\"currentFile\">\n        <div v-if=\"isImage(currentFile.fileType)\">\n          <img :src=\"currentFile.fileUrl\" class=\"preview-image\" />\n        </div>\n        <div v-else-if=\"isPdf(currentFile.fileType)\">\n          <iframe :src=\"currentFile.fileUrl\" class=\"preview-frame\"></iframe>\n        </div>\n        <div v-else class=\"preview-unsupported\">\n          <p>此文件类型不支持预览，请下载后查看</p>\n          <el-button type=\"primary\" @click=\"downloadFile(currentFile)\">下载文件</el-button>\n        </div>\n      </div>\n    </el-dialog>\n  </div>\n</template>\n\n<script>\nimport axios from 'axios'\n\nexport default {\n  name: 'FileManager',\n  data() {\n    return {\n      fileList: [],\n      selectedFile: null,\n      uploading: false,\n      loading: false,\n      previewVisible: false,\n      currentFile: null\n    }\n  },\n  created() {\n    this.fetchFileList()\n  },\n  methods: {\n    // 获取文件列表\n    async fetchFileList() {\n      this.loading = true\n      try {\n        const response = await axios.get('/api/files')\n        this.fileList = response.data.files || []\n      } catch (error) {\n        this.$message.error('获取文件列表失败')\n        console.error(error)\n      } finally {\n        this.loading = false\n      }\n    },\n    \n    // 触发文件选择\n    triggerFileInput() {\n      this.$refs.fileInput.click()\n    },\n    \n    // 处理文件选择\n    handleFileChange(event) {\n      const files = event.target.files\n      if (files.length > 0) {\n        this.selectedFile = files[0]\n        this.$message.success(`已选择文件: ${this.selectedFile.name}`)\n      }\n    },\n    \n    // 处理文件拖放\n    handleFileDrop(event) {\n      const files = event.dataTransfer.files\n      if (files.length > 0) {\n        this.selectedFile = files[0]\n        this.$message.success(`已选择文件: ${this.selectedFile.name}`)\n      }\n    },\n    \n    // 上传文件\n    async uploadFile() {\n      if (!this.selectedFile) {\n        this.$message.warning('请先选择文件')\n        return\n      }\n      \n      // 检查文件大小\n      if (this.selectedFile.size > 10 * 1024 * 1024) {\n        this.$message.error('文件大小不能超过10MB')\n        return\n      }\n      \n      const formData = new FormData()\n      formData.append('file', this.selectedFile)\n      \n      this.uploading = true\n      try {\n        const response = await axios.post('/api/file/upload', formData, {\n          headers: {\n            'Content-Type': 'multipart/form-data'\n          }\n        })\n        \n        this.$message.success('文件上传成功')\n        this.selectedFile = null\n        this.$refs.fileInput.value = ''\n        this.fetchFileList() // 刷新文件列表\n      } catch (error) {\n        this.$message.error(`上传失败: ${error.response?.data?.error || '未知错误'}`)\n        console.error(error)\n      } finally {\n        this.uploading = false\n      }\n    },\n    \n    // 预览文件\n    previewFile(file) {\n      this.currentFile = file\n      this.previewVisible = true\n    },\n    \n    // 下载文件\n    downloadFile(file) {\n      window.open(file.fileUrl, '_blank')\n    },\n    \n    // 删除文件\n    async deleteFile(file) {\n      this.$confirm('确定要删除此文件吗?', '提示', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'warning'\n      }).then(async () => {\n        try {\n          const fileName = file.fileUrl.split('/').pop()\n          await axios.post(`/api/file/delete/${fileName}`)\n          this.$message.success('文件删除成功')\n          this.fetchFileList() // 刷新文件列表\n        } catch (error) {\n          this.$message.error(`删除失败: ${error.response?.data?.error || '未知错误'}`)\n          console.error(error)\n        }\n      }).catch(() => {\n        // 取消删除\n      })\n    },\n    \n    // 格式化文件大小\n    formatFileSize(size) {\n      if (size < 1024) {\n        return size + ' B'\n      } else if (size < 1024 * 1024) {\n        return (size / 1024).toFixed(2) + ' KB'\n      } else {\n        return (size / (1024 * 1024)).toFixed(2) + ' MB'\n      }\n    },\n    \n    // 获取文件类型标签\n    getFileTypeLabel(type) {\n      if (type.startsWith('image/')) {\n        return '图片'\n      } else if (type === 'application/pdf') {\n        return 'PDF'\n      } else if (type.includes('word')) {\n        return 'Word'\n      } else if (type.includes('excel')) {\n        return 'Excel'\n      } else if (type === 'text/plain') {\n        return '文本'\n      } else {\n        return '其他'\n      }\n    },\n    \n    // 判断是否为图片\n    isImage(type) {\n      return type.startsWith('image/')\n    },\n    \n    // 判断是否为PDF\n    isPdf(type) {\n      return type === 'application/pdf'\n    }\n  }\n}\n</script>\n\n<style scoped>\n.file-manager {\n  padding: 20px;\n}\n\n.upload-area {\n  margin-bottom: 30px;\n  padding: 20px;\n  background-color: #f5f7fa;\n  border-radius: 4px;\n}\n\n.upload-box {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  height: 200px;\n  border: 2px dashed #dcdfe6;\n  border-radius: 6px;\n  cursor: pointer;\n  margin-bottom: 20px;\n  transition: all 0.3s;\n}\n\n.upload-box:hover {\n  border-color: #409eff;\n}\n\n.upload-icon {\n  font-size: 48px;\n  color: #909399;\n  margin-bottom: 10px;\n}\n\n.upload-text {\n  text-align: center;\n}\n\n.upload-text span {\n  font-size: 16px;\n  color: #606266;\n}\n\n.upload-text p {\n  margin-top: 10px;\n  color: #909399;\n  font-size: 14px;\n}\n\n.preview-container {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  min-height: 300px;\n}\n\n.preview-image {\n  max-width: 100%;\n  max-height: 500px;\n}\n\n.preview-frame {\n  width: 100%;\n  height: 500px;\n  border: none;\n}\n\n.preview-unsupported {\n  text-align: center;\n  padding: 30px;\n}\n\n.danger-text {\n  color: #f56c6c;\n}\n</style>\n"]}]}