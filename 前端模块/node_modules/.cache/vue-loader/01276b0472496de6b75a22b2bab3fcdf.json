{"remainingRequest":"D:\\大水管子\\Beginner_Guide\\前端模块\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\大水管子\\Beginner_Guide\\前端模块\\src\\views\\Login.vue?vue&type=style&index=0&id=26084dc2&scoped=true&lang=css","dependencies":[{"path":"D:\\大水管子\\Beginner_Guide\\前端模块\\src\\views\\Login.vue","mtime":1748027978004},{"path":"D:\\大水管子\\Beginner_Guide\\前端模块\\node_modules\\css-loader\\dist\\cjs.js","mtime":1748024887609},{"path":"D:\\大水管子\\Beginner_Guide\\前端模块\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1748024879016},{"path":"D:\\大水管子\\Beginner_Guide\\前端模块\\node_modules\\postcss-loader\\src\\index.js","mtime":1748024887367},{"path":"D:\\大水管子\\Beginner_Guide\\前端模块\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1748024889641},{"path":"D:\\大水管子\\Beginner_Guide\\前端模块\\node_modules\\vue-loader\\lib\\index.js","mtime":1748024878761}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ci5sb2dpbi1jb250YWluZXIgewogIGRpc3BsYXk6IGZsZXg7CiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7CiAgYWxpZ24taXRlbXM6IGNlbnRlcjsKICBoZWlnaHQ6IDEwMHZoOwogIGJhY2tncm91bmQtY29sb3I6ICNmNWY3ZmE7Cn0KCi5sb2dpbi1jYXJkIHsKICB3aWR0aDogNDAwcHg7CiAgcGFkZGluZzogMjBweDsKfQoKLnRpdGxlIHsKICB0ZXh0LWFsaWduOiBjZW50ZXI7CiAgbWFyZ2luLWJvdHRvbTogMjBweDsKfQo="},{"version":3,"sources":["Login.vue"],"names":[],"mappings":";AAiIA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA","file":"Login.vue","sourceRoot":"src/views","sourcesContent":["<template>\n  <div class=\"login-container\">\n    <el-card class=\"login-card\">\n      <div class=\"title\">\n        <h2>{{ isLogin ? '用户登录' : '用户注册' }}</h2>\n      </div>\n      \n      <el-form :model=\"formData\" :rules=\"rules\" ref=\"loginForm\" label-width=\"80px\">\n        <el-form-item label=\"用户名\" prop=\"username\">\n          <el-input v-model=\"formData.username\" placeholder=\"请输入用户名\"></el-input>\n        </el-form-item>\n        \n        <el-form-item label=\"密码\" prop=\"password\">\n          <el-input v-model=\"formData.password\" type=\"password\" placeholder=\"请输入密码\"></el-input>\n        </el-form-item>\n        \n        <el-form-item v-if=\"!isLogin\" label=\"确认密码\" prop=\"confirmPassword\">\n          <el-input v-model=\"formData.confirmPassword\" type=\"password\" placeholder=\"请再次输入密码\"></el-input>\n        </el-form-item>\n        \n        <el-form-item>\n          <el-button type=\"primary\" @click=\"submitForm\" :loading=\"loading\">{{ isLogin ? '登录' : '注册' }}</el-button>\n          <el-button @click=\"switchMode\">{{ isLogin ? '去注册' : '去登录' }}</el-button>\n        </el-form-item>\n      </el-form>\n    </el-card>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'Login',\n  data() {\n    // 自定义校验规则：确认密码\n    const validateConfirmPassword = (rule, value, callback) => {\n      if (value !== this.formData.password) {\n        callback(new Error('两次输入的密码不一致'))\n      } else {\n        callback()\n      }\n    }\n    \n    return {\n      // 是否为登录模式\n      isLogin: true,\n      // 加载状态\n      loading: false,\n      // 表单数据\n      formData: {\n        username: '',\n        password: '',\n        confirmPassword: ''\n      },\n      // 表单验证规则\n      rules: {\n        username: [\n          { required: true, message: '请输入用户名', trigger: 'blur' },\n          { min: 3, max: 20, message: '用户名长度应为3-20个字符', trigger: 'blur' }\n        ],\n        password: [\n          { required: true, message: '请输入密码', trigger: 'blur' },\n          { min: 6, max: 20, message: '密码长度应为6-20个字符', trigger: 'blur' }\n        ],\n        confirmPassword: [\n          { required: true, message: '请再次输入密码', trigger: 'blur' },\n          { validator: validateConfirmPassword, trigger: 'blur' }\n        ]\n      }\n    }\n  },\n  methods: {\n    // 切换登录/注册模式\n    switchMode() {\n      this.isLogin = !this.isLogin\n      this.$refs.loginForm.resetFields()\n    },\n    \n    // 提交表单\n    submitForm() {\n      this.$refs.loginForm.validate(async valid => {\n        if (!valid) return\n        \n        this.loading = true\n        \n        try {\n          if (this.isLogin) {\n            // 登录操作\n            await this.$store.dispatch('login', {\n              username: this.formData.username,\n              password: this.formData.password\n            })\n            \n            // 登录成功，跳转到首页\n            this.$router.push('/home')\n            this.$message.success('登录成功')\n          } else {\n            // 注册操作\n            console.log('准备提交注册数据:', {\n              username: this.formData.username,\n              password: this.formData.password\n            });\n            \n            // 确保密码字段正确传递\n            const registerData = {\n              username: this.formData.username,\n              password: this.formData.password\n            };\n            \n            await this.$store.dispatch('register', registerData)\n            \n            // 注册成功，切换到登录模式\n            this.isLogin = true\n            this.$refs.loginForm.resetFields()\n            this.$message.success('注册成功，请登录')\n          }\n        } catch (error) {\n          // 处理错误\n          const errorMsg = error.response?.data?.error || (this.isLogin ? '登录失败' : '注册失败')\n          this.$message.error(errorMsg)\n        } finally {\n          this.loading = false\n        }\n      })\n    }\n  }\n}\n</script>\n\n<style scoped>\n.login-container {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 100vh;\n  background-color: #f5f7fa;\n}\n\n.login-card {\n  width: 400px;\n  padding: 20px;\n}\n\n.title {\n  text-align: center;\n  margin-bottom: 20px;\n}\n</style>\n"]}]}