{"remainingRequest":"D:\\大水管子\\Beginner_Guide\\前端模块\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\大水管子\\Beginner_Guide\\前端模块\\src\\views\\FileManager.vue?vue&type=script&lang=js","dependencies":[{"path":"D:\\大水管子\\Beginner_Guide\\前端模块\\src\\views\\FileManager.vue","mtime":1748095267737},{"path":"D:\\大水管子\\Beginner_Guide\\前端模块\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1748024889641},{"path":"D:\\大水管子\\Beginner_Guide\\前端模块\\node_modules\\babel-loader\\lib\\index.js","mtime":1748024878556},{"path":"D:\\大水管子\\Beginner_Guide\\前端模块\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1748024889641},{"path":"D:\\大水管子\\Beginner_Guide\\前端模块\\node_modules\\vue-loader\\lib\\index.js","mtime":1748024878761}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CmltcG9ydCBheGlvcyBmcm9tICdheGlvcycKCmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAnRmlsZU1hbmFnZXInLAogIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICBmaWxlTGlzdDogW10sCiAgICAgIHNlbGVjdGVkRmlsZTogbnVsbCwKICAgICAgdXBsb2FkaW5nOiBmYWxzZSwKICAgICAgbG9hZGluZzogZmFsc2UsCiAgICAgIHByZXZpZXdWaXNpYmxlOiBmYWxzZSwKICAgICAgY3VycmVudEZpbGU6IG51bGwKICAgIH0KICB9LAogIGNyZWF0ZWQoKSB7CiAgICB0aGlzLmZldGNoRmlsZUxpc3QoKQogIH0sCiAgbWV0aG9kczogewogICAgLy8g6I635Y+W5paH5Lu25YiX6KGoCiAgICBhc3luYyBmZXRjaEZpbGVMaXN0KCkgewogICAgICB0aGlzLmxvYWRpbmcgPSB0cnVlCiAgICAgIHRyeSB7CiAgICAgICAgY29uc3QgcmVzcG9uc2UgPSBhd2FpdCBheGlvcy5nZXQoJy9hcGkvZmlsZXMnKQogICAgICAgIHRoaXMuZmlsZUxpc3QgPSByZXNwb25zZS5kYXRhLmZpbGVzIHx8IFtdCiAgICAgIH0gY2F0Y2ggKGVycm9yKSB7CiAgICAgICAgdGhpcy4kbWVzc2FnZS5lcnJvcign6I635Y+W5paH5Lu25YiX6KGo5aSx6LSlJykKICAgICAgICBjb25zb2xlLmVycm9yKGVycm9yKQogICAgICB9IGZpbmFsbHkgewogICAgICAgIHRoaXMubG9hZGluZyA9IGZhbHNlCiAgICAgIH0KICAgIH0sCiAgICAKICAgIC8vIOinpuWPkeaWh+S7tumAieaLqQogICAgdHJpZ2dlckZpbGVJbnB1dCgpIHsKICAgICAgdGhpcy4kcmVmcy5maWxlSW5wdXQuY2xpY2soKQogICAgfSwKICAgIAogICAgLy8g5aSE55CG5paH5Lu26YCJ5oupCiAgICBoYW5kbGVGaWxlQ2hhbmdlKGV2ZW50KSB7CiAgICAgIGNvbnN0IGZpbGVzID0gZXZlbnQudGFyZ2V0LmZpbGVzCiAgICAgIGlmIChmaWxlcy5sZW5ndGggPiAwKSB7CiAgICAgICAgdGhpcy5zZWxlY3RlZEZpbGUgPSBmaWxlc1swXQogICAgICAgIHRoaXMuJG1lc3NhZ2Uuc3VjY2Vzcyhg5bey6YCJ5oup5paH5Lu2OiAke3RoaXMuc2VsZWN0ZWRGaWxlLm5hbWV9YCkKICAgICAgfQogICAgfSwKICAgIAogICAgLy8g5aSE55CG5paH5Lu25ouW5pS+CiAgICBoYW5kbGVGaWxlRHJvcChldmVudCkgewogICAgICBjb25zdCBmaWxlcyA9IGV2ZW50LmRhdGFUcmFuc2Zlci5maWxlcwogICAgICBpZiAoZmlsZXMubGVuZ3RoID4gMCkgewogICAgICAgIHRoaXMuc2VsZWN0ZWRGaWxlID0gZmlsZXNbMF0KICAgICAgICB0aGlzLiRtZXNzYWdlLnN1Y2Nlc3MoYOW3sumAieaLqeaWh+S7tjogJHt0aGlzLnNlbGVjdGVkRmlsZS5uYW1lfWApCiAgICAgIH0KICAgIH0sCiAgICAKICAgIC8vIOS4iuS8oOaWh+S7tgogICAgYXN5bmMgdXBsb2FkRmlsZSgpIHsKICAgICAgaWYgKCF0aGlzLnNlbGVjdGVkRmlsZSkgewogICAgICAgIHRoaXMuJG1lc3NhZ2Uud2FybmluZygn6K+35YWI6YCJ5oup5paH5Lu2JykKICAgICAgICByZXR1cm4KICAgICAgfQogICAgICAKICAgICAgLy8g5qOA5p+l5paH5Lu25aSn5bCPCiAgICAgIGlmICh0aGlzLnNlbGVjdGVkRmlsZS5zaXplID4gMTAgKiAxMDI0ICogMTAyNCkgewogICAgICAgIHRoaXMuJG1lc3NhZ2UuZXJyb3IoJ+aWh+S7tuWkp+Wwj+S4jeiDvei2hei/hzEwTUInKQogICAgICAgIHJldHVybgogICAgICB9CiAgICAgIAogICAgICBjb25zdCBmb3JtRGF0YSA9IG5ldyBGb3JtRGF0YSgpCiAgICAgIGZvcm1EYXRhLmFwcGVuZCgnZmlsZScsIHRoaXMuc2VsZWN0ZWRGaWxlKQogICAgICAKICAgICAgdGhpcy51cGxvYWRpbmcgPSB0cnVlCiAgICAgIHRyeSB7CiAgICAgICAgY29uc3QgcmVzcG9uc2UgPSBhd2FpdCBheGlvcy5wb3N0KCcvYXBpL2ZpbGUvdXBsb2FkJywgZm9ybURhdGEsIHsKICAgICAgICAgIGhlYWRlcnM6IHsKICAgICAgICAgICAgJ0NvbnRlbnQtVHlwZSc6ICdtdWx0aXBhcnQvZm9ybS1kYXRhJwogICAgICAgICAgfQogICAgICAgIH0pCiAgICAgICAgCiAgICAgICAgdGhpcy4kbWVzc2FnZS5zdWNjZXNzKCfmlofku7bkuIrkvKDmiJDlip8nKQogICAgICAgIHRoaXMuc2VsZWN0ZWRGaWxlID0gbnVsbAogICAgICAgIHRoaXMuJHJlZnMuZmlsZUlucHV0LnZhbHVlID0gJycKICAgICAgICB0aGlzLmZldGNoRmlsZUxpc3QoKSAvLyDliLfmlrDmlofku7bliJfooagKICAgICAgfSBjYXRjaCAoZXJyb3IpIHsKICAgICAgICB0aGlzLiRtZXNzYWdlLmVycm9yKGDkuIrkvKDlpLHotKU6ICR7ZXJyb3IucmVzcG9uc2U/LmRhdGE/LmVycm9yIHx8ICfmnKrnn6XplJnor68nfWApCiAgICAgICAgY29uc29sZS5lcnJvcihlcnJvcikKICAgICAgfSBmaW5hbGx5IHsKICAgICAgICB0aGlzLnVwbG9hZGluZyA9IGZhbHNlCiAgICAgIH0KICAgIH0sCiAgICAKICAgIC8vIOmihOiniOaWh+S7tgogICAgcHJldmlld0ZpbGUoZmlsZSkgewogICAgICB0aGlzLmN1cnJlbnRGaWxlID0gZmlsZQogICAgICB0aGlzLnByZXZpZXdWaXNpYmxlID0gdHJ1ZQogICAgfSwKICAgIAogICAgLy8g5LiL6L295paH5Lu2CiAgICBkb3dubG9hZEZpbGUoZmlsZSkgewogICAgICB3aW5kb3cub3BlbihmaWxlLmZpbGVVcmwsICdfYmxhbmsnKQogICAgfSwKICAgIAogICAgLy8g5Yig6Zmk5paH5Lu2CiAgICBhc3luYyBkZWxldGVGaWxlKGZpbGUpIHsKICAgICAgdGhpcy4kY29uZmlybSgn56Gu5a6a6KaB5Yig6Zmk5q2k5paH5Lu25ZCXPycsICfmj5DnpLonLCB7CiAgICAgICAgY29uZmlybUJ1dHRvblRleHQ6ICfnoa7lrponLAogICAgICAgIGNhbmNlbEJ1dHRvblRleHQ6ICflj5bmtognLAogICAgICAgIHR5cGU6ICd3YXJuaW5nJwogICAgICB9KS50aGVuKGFzeW5jICgpID0+IHsKICAgICAgICB0cnkgewogICAgICAgICAgY29uc3QgZmlsZU5hbWUgPSBmaWxlLmZpbGVVcmwuc3BsaXQoJy8nKS5wb3AoKQogICAgICAgICAgYXdhaXQgYXhpb3MucG9zdChgL2FwaS9maWxlL2RlbGV0ZS8ke2ZpbGVOYW1lfWApCiAgICAgICAgICB0aGlzLiRtZXNzYWdlLnN1Y2Nlc3MoJ+aWh+S7tuWIoOmZpOaIkOWKnycpCiAgICAgICAgICB0aGlzLmZldGNoRmlsZUxpc3QoKSAvLyDliLfmlrDmlofku7bliJfooagKICAgICAgICB9IGNhdGNoIChlcnJvcikgewogICAgICAgICAgdGhpcy4kbWVzc2FnZS5lcnJvcihg5Yig6Zmk5aSx6LSlOiAke2Vycm9yLnJlc3BvbnNlPy5kYXRhPy5lcnJvciB8fCAn5pyq55+l6ZSZ6K+vJ31gKQogICAgICAgICAgY29uc29sZS5lcnJvcihlcnJvcikKICAgICAgICB9CiAgICAgIH0pLmNhdGNoKCgpID0+IHsKICAgICAgICAvLyDlj5bmtojliKDpmaQKICAgICAgfSkKICAgIH0sCiAgICAKICAgIC8vIOagvOW8j+WMluaWh+S7tuWkp+WwjwogICAgZm9ybWF0RmlsZVNpemUoc2l6ZSkgewogICAgICBpZiAoc2l6ZSA8IDEwMjQpIHsKICAgICAgICByZXR1cm4gc2l6ZSArICcgQicKICAgICAgfSBlbHNlIGlmIChzaXplIDwgMTAyNCAqIDEwMjQpIHsKICAgICAgICByZXR1cm4gKHNpemUgLyAxMDI0KS50b0ZpeGVkKDIpICsgJyBLQicKICAgICAgfSBlbHNlIHsKICAgICAgICByZXR1cm4gKHNpemUgLyAoMTAyNCAqIDEwMjQpKS50b0ZpeGVkKDIpICsgJyBNQicKICAgICAgfQogICAgfSwKICAgIAogICAgLy8g6I635Y+W5paH5Lu257G75Z6L5qCH562+CiAgICBnZXRGaWxlVHlwZUxhYmVsKHR5cGUpIHsKICAgICAgaWYgKHR5cGUuc3RhcnRzV2l0aCgnaW1hZ2UvJykpIHsKICAgICAgICByZXR1cm4gJ+WbvueJhycKICAgICAgfSBlbHNlIGlmICh0eXBlID09PSAnYXBwbGljYXRpb24vcGRmJykgewogICAgICAgIHJldHVybiAnUERGJwogICAgICB9IGVsc2UgaWYgKHR5cGUuaW5jbHVkZXMoJ3dvcmQnKSkgewogICAgICAgIHJldHVybiAnV29yZCcKICAgICAgfSBlbHNlIGlmICh0eXBlLmluY2x1ZGVzKCdleGNlbCcpKSB7CiAgICAgICAgcmV0dXJuICdFeGNlbCcKICAgICAgfSBlbHNlIGlmICh0eXBlID09PSAndGV4dC9wbGFpbicpIHsKICAgICAgICByZXR1cm4gJ+aWh+acrCcKICAgICAgfSBlbHNlIHsKICAgICAgICByZXR1cm4gJ+WFtuS7licKICAgICAgfQogICAgfSwKICAgIAogICAgLy8g5Yik5pat5piv5ZCm5Li65Zu+54mHCiAgICBpc0ltYWdlKHR5cGUpIHsKICAgICAgcmV0dXJuIHR5cGUuc3RhcnRzV2l0aCgnaW1hZ2UvJykKICAgIH0sCiAgICAKICAgIC8vIOWIpOaWreaYr+WQpuS4ulBERgogICAgaXNQZGYodHlwZSkgewogICAgICByZXR1cm4gdHlwZSA9PT0gJ2FwcGxpY2F0aW9uL3BkZicKICAgIH0KICB9Cn0K"},{"version":3,"sources":["FileManager.vue"],"names":[],"mappings":";AAmfile":"FileManager.vue","sourceRoot":"src/views","sourcesContent":["<template>\n  <div class=\"file-manager\">\n    <h1>文件管理</h1>\n    \n    <!-- 文件上传区域 -->\n    <div class=\"upload-area\">\n      <h2>上传文件</h2>\n      <div class=\"upload-box\" @click=\"triggerFileInput\" @dragover.prevent @drop.prevent=\"handleFileDrop\">\n        <input type=\"file\" ref=\"fileInput\" @change=\"handleFileChange\" style=\"display: none\" />\n        <div class=\"upload-icon\">\n          <i class=\"el-icon-upload\"></i>\n        </div>\n        <div class=\"upload-text\">\n          <span>点击或拖拽文件到此处上传</span>\n          <p>支持jpg, png, pdf等常见格式，单个文件不超过10MB</p>\n        </div>\n      </div>\n      <el-button type=\"primary\" @click=\"uploadFile\" :loading=\"uploading\" :disabled=\"!selectedFile\">\n        上传文件\n      </el-button>\n    </div>\n\n    <!-- 文件列表区域 -->\n    <div class=\"file-list\">\n      <h2>我的文件</h2>\n      <el-table :data=\"fileList\" style=\"width: 100%\" v-loading=\"loading\">\n        <el-table-column label=\"文件名\" prop=\"fileName\"></el-table-column>\n        <el-table-column label=\"类型\" width=\"120\">\n          <template slot-scope=\"scope\">\n            <span>{{ getFileTypeLabel(scope.row.fileType) }}</span>\n          </template>\n        </el-table-column>\n        <el-table-column label=\"大小\" width=\"120\">\n          <template slot-scope=\"scope\">\n            <span>{{ formatFileSize(scope.row.fileSize) }}</span>\n          </template>\n        </el-table-column>\n        <el-table-column label=\"上传时间\" width=\"180\" prop=\"uploadAt\"></el-table-column>\n        <el-table-column label=\"操作\" width=\"200\">\n          <template slot-scope=\"scope\">\n            <el-button type=\"text\" @click=\"previewFile(scope.row)\">预览</el-button>\n            <el-button type=\"text\" @click=\"downloadFile(scope.row)\">下载</el-button>\n            <el-button type=\"text\" class=\"danger-text\" @click=\"deleteFile(scope.row)\">删除</el-button>\n          </template>\n        </el-table-column>\n      </el-table>\n    </div>\n\n    <!-- 文件预览对话框 -->\n    <el-dialog title=\"文件预览\" :visible.sync=\"previewVisible\" width=\"70%\">\n      <div class=\"preview-container\" v-if=\"currentFile\">\n        <div v-if=\"isImage(currentFile.fileType)\">\n          <img :src=\"currentFile.fileUrl\" class=\"preview-image\" />\n        </div>\n        <div v-else-if=\"isPdf(currentFile.fileType)\">\n          <iframe :src=\"currentFile.fileUrl\" class=\"preview-frame\"></iframe>\n        </div>\n        <div v-else class=\"preview-unsupported\">\n          <p>此文件类型不支持预览，请下载后查看</p>\n          <el-button type=\"primary\" @click=\"downloadFile(currentFile)\">下载文件</el-button>\n        </div>\n      </div>\n    </el-dialog>\n  </div>\n</template>\n\n<script>\nimport axios from 'axios'\n\nexport default {\n  name: 'FileManager',\n  data() {\n    return {\n      fileList: [],\n      selectedFile: null,\n      uploading: false,\n      loading: false,\n      previewVisible: false,\n      currentFile: null\n    }\n  },\n  created() {\n    this.fetchFileList()\n  },\n  methods: {\n    // 获取文件列表\n    async fetchFileList() {\n      this.loading = true\n      try {\n        const response = await axios.get('/api/files')\n        this.fileList = response.data.files || []\n      } catch (error) {\n        this.$message.error('获取文件列表失败')\n        console.error(error)\n      } finally {\n        this.loading = false\n      }\n    },\n    \n    // 触发文件选择\n    triggerFileInput() {\n      this.$refs.fileInput.click()\n    },\n    \n    // 处理文件选择\n    handleFileChange(event) {\n      const files = event.target.files\n      if (files.length > 0) {\n        this.selectedFile = files[0]\n        this.$message.success(`已选择文件: ${this.selectedFile.name}`)\n      }\n    },\n    \n    // 处理文件拖放\n    handleFileDrop(event) {\n      const files = event.dataTransfer.files\n      if (files.length > 0) {\n        this.selectedFile = files[0]\n        this.$message.success(`已选择文件: ${this.selectedFile.name}`)\n      }\n    },\n    \n    // 上传文件\n    async uploadFile() {\n      if (!this.selectedFile) {\n        this.$message.warning('请先选择文件')\n        return\n      }\n      \n      // 检查文件大小\n      if (this.selectedFile.size > 10 * 1024 * 1024) {\n        this.$message.error('文件大小不能超过10MB')\n        return\n      }\n      \n      const formData = new FormData()\n      formData.append('file', this.selectedFile)\n      \n      this.uploading = true\n      try {\n        const response = await axios.post('/api/file/upload', formData, {\n          headers: {\n            'Content-Type': 'multipart/form-data'\n          }\n        })\n        \n        this.$message.success('文件上传成功')\n        this.selectedFile = null\n        this.$refs.fileInput.value = ''\n        this.fetchFileList() // 刷新文件列表\n      } catch (error) {\n        this.$message.error(`上传失败: ${error.response?.data?.error || '未知错误'}`)\n        console.error(error)\n      } finally {\n        this.uploading = false\n      }\n    },\n    \n    // 预览文件\n    previewFile(file) {\n      this.currentFile = file\n      this.previewVisible = true\n    },\n    \n    // 下载文件\n    downloadFile(file) {\n      window.open(file.fileUrl, '_blank')\n    },\n    \n    // 删除文件\n    async deleteFile(file) {\n      this.$confirm('确定要删除此文件吗?', '提示', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'warning'\n      }).then(async () => {\n        try {\n          const fileName = file.fileUrl.split('/').pop()\n          await axios.post(`/api/file/delete/${fileName}`)\n          this.$message.success('文件删除成功')\n          this.fetchFileList() // 刷新文件列表\n        } catch (error) {\n          this.$message.error(`删除失败: ${error.response?.data?.error || '未知错误'}`)\n          console.error(error)\n        }\n      }).catch(() => {\n        // 取消删除\n      })\n    },\n    \n    // 格式化文件大小\n    formatFileSize(size) {\n      if (size < 1024) {\n        return size + ' B'\n      } else if (size < 1024 * 1024) {\n        return (size / 1024).toFixed(2) + ' KB'\n      } else {\n        return (size / (1024 * 1024)).toFixed(2) + ' MB'\n      }\n    },\n    \n    // 获取文件类型标签\n    getFileTypeLabel(type) {\n      if (type.startsWith('image/')) {\n        return '图片'\n      } else if (type === 'application/pdf') {\n        return 'PDF'\n      } else if (type.includes('word')) {\n        return 'Word'\n      } else if (type.includes('excel')) {\n        return 'Excel'\n      } else if (type === 'text/plain') {\n        return '文本'\n      } else {\n        return '其他'\n      }\n    },\n    \n    // 判断是否为图片\n    isImage(type) {\n      return type.startsWith('image/')\n    },\n    \n    // 判断是否为PDF\n    isPdf(type) {\n      return type === 'application/pdf'\n    }\n  }\n}\n</script>\n\n<style scoped>\n.file-manager {\n  padding: 20px;\n}\n\n.upload-area {\n  margin-bottom: 30px;\n  padding: 20px;\n  background-color: #f5f7fa;\n  border-radius: 4px;\n}\n\n.upload-box {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  height: 200px;\n  border: 2px dashed #dcdfe6;\n  border-radius: 6px;\n  cursor: pointer;\n  margin-bottom: 20px;\n  transition: all 0.3s;\n}\n\n.upload-box:hover {\n  border-color: #409eff;\n}\n\n.upload-icon {\n  font-size: 48px;\n  color: #909399;\n  margin-bottom: 10px;\n}\n\n.upload-text {\n  text-align: center;\n}\n\n.upload-text span {\n  font-size: 16px;\n  color: #606266;\n}\n\n.upload-text p {\n  margin-top: 10px;\n  color: #909399;\n  font-size: 14px;\n}\n\n.preview-container {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  min-height: 300px;\n}\n\n.preview-image {\n  max-width: 100%;\n  max-height: 500px;\n}\n\n.preview-frame {\n  width: 100%;\n  height: 500px;\n  border: none;\n}\n\n.preview-unsupported {\n  text-align: center;\n  padding: 30px;\n}\n\n.danger-text {\n  color: #f56c6c;\n}\n</style>\n"]}]}