{"remainingRequest":"D:\\大水管子\\Beginner_Guide\\前端模块\\node_modules\\babel-loader\\lib\\index.js!D:\\大水管子\\Beginner_Guide\\前端模块\\node_modules\\cache-loader\\dist\\cjs.js??ref--1-0!D:\\大水管子\\Beginner_Guide\\前端模块\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\大水管子\\Beginner_Guide\\前端模块\\src\\views\\FileManager.vue?vue&type=script&lang=js","dependencies":[{"path":"D:\\大水管子\\Beginner_Guide\\前端模块\\src\\views\\FileManager.vue","mtime":1748095267737},{"path":"D:\\大水管子\\Beginner_Guide\\前端模块\\babel.config.js","mtime":1748026455161},{"path":"D:\\大水管子\\Beginner_Guide\\前端模块\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1748024889641},{"path":"D:\\大水管子\\Beginner_Guide\\前端模块\\node_modules\\babel-loader\\lib\\index.js","mtime":1748024878556},{"path":"D:\\大水管子\\Beginner_Guide\\前端模块\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1748024889641},{"path":"D:\\大水管子\\Beginner_Guide\\前端模块\\node_modules\\vue-loader\\lib\\index.js","mtime":1748024878761}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IGF4aW9zIGZyb20gJ2F4aW9zJzsKZXhwb3J0IGRlZmF1bHQgewogIG5hbWU6ICdGaWxlTWFuYWdlcicsCiAgZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIGZpbGVMaXN0OiBbXSwKICAgICAgc2VsZWN0ZWRGaWxlOiBudWxsLAogICAgICB1cGxvYWRpbmc6IGZhbHNlLAogICAgICBsb2FkaW5nOiBmYWxzZSwKICAgICAgcHJldmlld1Zpc2libGU6IGZhbHNlLAogICAgICBjdXJyZW50RmlsZTogbnVsbAogICAgfTsKICB9LAogIGNyZWF0ZWQoKSB7CiAgICB0aGlzLmZldGNoRmlsZUxpc3QoKTsKICB9LAogIG1ldGhvZHM6IHsKICAgIC8vIOiOt+WPluaWh+S7tuWIl+ihqAogICAgYXN5bmMgZmV0Y2hGaWxlTGlzdCgpIHsKICAgICAgdGhpcy5sb2FkaW5nID0gdHJ1ZTsKICAgICAgdHJ5IHsKICAgICAgICBjb25zdCByZXNwb25zZSA9IGF3YWl0IGF4aW9zLmdldCgnL2FwaS9maWxlcycpOwogICAgICAgIHRoaXMuZmlsZUxpc3QgPSByZXNwb25zZS5kYXRhLmZpbGVzIHx8IFtdOwogICAgICB9IGNhdGNoIChlcnJvcikgewogICAgICAgIHRoaXMuJG1lc3NhZ2UuZXJyb3IoJ+iOt+WPluaWh+S7tuWIl+ihqOWksei0pScpOwogICAgICAgIGNvbnNvbGUuZXJyb3IoZXJyb3IpOwogICAgICB9IGZpbmFsbHkgewogICAgICAgIHRoaXMubG9hZGluZyA9IGZhbHNlOwogICAgICB9CiAgICB9LAogICAgLy8g6Kem5Y+R5paH5Lu26YCJ5oupCiAgICB0cmlnZ2VyRmlsZUlucHV0KCkgewogICAgICB0aGlzLiRyZWZzLmZpbGVJbnB1dC5jbGljaygpOwogICAgfSwKICAgIC8vIOWkhOeQhuaWh+S7tumAieaLqQogICAgaGFuZGxlRmlsZUNoYW5nZShldmVudCkgewogICAgICBjb25zdCBmaWxlcyA9IGV2ZW50LnRhcmdldC5maWxlczsKICAgICAgaWYgKGZpbGVzLmxlbmd0aCA+IDApIHsKICAgICAgICB0aGlzLnNlbGVjdGVkRmlsZSA9IGZpbGVzWzBdOwogICAgICAgIHRoaXMuJG1lc3NhZ2Uuc3VjY2Vzcyhg5bey6YCJ5oup5paH5Lu2OiAke3RoaXMuc2VsZWN0ZWRGaWxlLm5hbWV9YCk7CiAgICAgIH0KICAgIH0sCiAgICAvLyDlpITnkIbmlofku7bmi5bmlL4KICAgIGhhbmRsZUZpbGVEcm9wKGV2ZW50KSB7CiAgICAgIGNvbnN0IGZpbGVzID0gZXZlbnQuZGF0YVRyYW5zZmVyLmZpbGVzOwogICAgICBpZiAoZmlsZXMubGVuZ3RoID4gMCkgewogICAgICAgIHRoaXMuc2VsZWN0ZWRGaWxlID0gZmlsZXNbMF07CiAgICAgICAgdGhpcy4kbWVzc2FnZS5zdWNjZXNzKGDlt7LpgInmi6nmlofku7Y6ICR7dGhpcy5zZWxlY3RlZEZpbGUubmFtZX1gKTsKICAgICAgfQogICAgfSwKICAgIC8vIOS4iuS8oOaWh+S7tgogICAgYXN5bmMgdXBsb2FkRmlsZSgpIHsKICAgICAgaWYgKCF0aGlzLnNlbGVjdGVkRmlsZSkgewogICAgICAgIHRoaXMuJG1lc3NhZ2Uud2FybmluZygn6K+35YWI6YCJ5oup5paH5Lu2Jyk7CiAgICAgICAgcmV0dXJuOwogICAgICB9CgogICAgICAvLyDmo4Dmn6Xmlofku7blpKflsI8KICAgICAgaWYgKHRoaXMuc2VsZWN0ZWRGaWxlLnNpemUgPiAxMCAqIDEwMjQgKiAxMDI0KSB7CiAgICAgICAgdGhpcy4kbWVzc2FnZS5lcnJvcign5paH5Lu25aSn5bCP5LiN6IO96LaF6L+HMTBNQicpOwogICAgICAgIHJldHVybjsKICAgICAgfQogICAgICBjb25zdCBmb3JtRGF0YSA9IG5ldyBGb3JtRGF0YSgpOwogICAgICBmb3JtRGF0YS5hcHBlbmQoJ2ZpbGUnLCB0aGlzLnNlbGVjdGVkRmlsZSk7CiAgICAgIHRoaXMudXBsb2FkaW5nID0gdHJ1ZTsKICAgICAgdHJ5IHsKICAgICAgICBjb25zdCByZXNwb25zZSA9IGF3YWl0IGF4aW9zLnBvc3QoJy9hcGkvZmlsZS91cGxvYWQnLCBmb3JtRGF0YSwgewogICAgICAgICAgaGVhZGVyczogewogICAgICAgICAgICAnQ29udGVudC1UeXBlJzogJ211bHRpcGFydC9mb3JtLWRhdGEnCiAgICAgICAgICB9CiAgICAgICAgfSk7CiAgICAgICAgdGhpcy4kbWVzc2FnZS5zdWNjZXNzKCfmlofku7bkuIrkvKDmiJDlip8nKTsKICAgICAgICB0aGlzLnNlbGVjdGVkRmlsZSA9IG51bGw7CiAgICAgICAgdGhpcy4kcmVmcy5maWxlSW5wdXQudmFsdWUgPSAnJzsKICAgICAgICB0aGlzLmZldGNoRmlsZUxpc3QoKTsgLy8g5Yi35paw5paH5Lu25YiX6KGoCiAgICAgIH0gY2F0Y2ggKGVycm9yKSB7CiAgICAgICAgdmFyIF9lcnJvciRyZXNwb25zZTsKICAgICAgICB0aGlzLiRtZXNzYWdlLmVycm9yKGDkuIrkvKDlpLHotKU6ICR7KChfZXJyb3IkcmVzcG9uc2UgPSBlcnJvci5yZXNwb25zZSkgPT09IG51bGwgfHwgX2Vycm9yJHJlc3BvbnNlID09PSB2b2lkIDAgfHwgKF9lcnJvciRyZXNwb25zZSA9IF9lcnJvciRyZXNwb25zZS5kYXRhKSA9PT0gbnVsbCB8fCBfZXJyb3IkcmVzcG9uc2UgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9lcnJvciRyZXNwb25zZS5lcnJvcikgfHwgJ+acquefpemUmeivryd9YCk7CiAgICAgICAgY29uc29sZS5lcnJvcihlcnJvcik7CiAgICAgIH0gZmluYWxseSB7CiAgICAgICAgdGhpcy51cGxvYWRpbmcgPSBmYWxzZTsKICAgICAgfQogICAgfSwKICAgIC8vIOmihOiniOaWh+S7tgogICAgcHJldmlld0ZpbGUoZmlsZSkgewogICAgICB0aGlzLmN1cnJlbnRGaWxlID0gZmlsZTsKICAgICAgdGhpcy5wcmV2aWV3VmlzaWJsZSA9IHRydWU7CiAgICB9LAogICAgLy8g5LiL6L295paH5Lu2CiAgICBkb3dubG9hZEZpbGUoZmlsZSkgewogICAgICB3aW5kb3cub3BlbihmaWxlLmZpbGVVcmwsICdfYmxhbmsnKTsKICAgIH0sCiAgICAvLyDliKDpmaTmlofku7YKICAgIGFzeW5jIGRlbGV0ZUZpbGUoZmlsZSkgewogICAgICB0aGlzLiRjb25maXJtKCfnoa7lrpropoHliKDpmaTmraTmlofku7blkJc/JywgJ+aPkOekuicsIHsKICAgICAgICBjb25maXJtQnV0dG9uVGV4dDogJ+ehruWumicsCiAgICAgICAgY2FuY2VsQnV0dG9uVGV4dDogJ+WPlua2iCcsCiAgICAgICAgdHlwZTogJ3dhcm5pbmcnCiAgICAgIH0pLnRoZW4oYXN5bmMgKCkgPT4gewogICAgICAgIHRyeSB7CiAgICAgICAgICBjb25zdCBmaWxlTmFtZSA9IGZpbGUuZmlsZVVybC5zcGxpdCgnLycpLnBvcCgpOwogICAgICAgICAgYXdhaXQgYXhpb3MucG9zdChgL2FwaS9maWxlL2RlbGV0ZS8ke2ZpbGVOYW1lfWApOwogICAgICAgICAgdGhpcy4kbWVzc2FnZS5zdWNjZXNzKCfmlofku7bliKDpmaTmiJDlip8nKTsKICAgICAgICAgIHRoaXMuZmV0Y2hGaWxlTGlzdCgpOyAvLyDliLfmlrDmlofku7bliJfooagKICAgICAgICB9IGNhdGNoIChlcnJvcikgewogICAgICAgICAgdmFyIF9lcnJvciRyZXNwb25zZTI7CiAgICAgICAgICB0aGlzLiRtZXNzYWdlLmVycm9yKGDliKDpmaTlpLHotKU6ICR7KChfZXJyb3IkcmVzcG9uc2UyID0gZXJyb3IucmVzcG9uc2UpID09PSBudWxsIHx8IF9lcnJvciRyZXNwb25zZTIgPT09IHZvaWQgMCB8fCAoX2Vycm9yJHJlc3BvbnNlMiA9IF9lcnJvciRyZXNwb25zZTIuZGF0YSkgPT09IG51bGwgfHwgX2Vycm9yJHJlc3BvbnNlMiA9PT0gdm9pZCAwID8gdm9pZCAwIDogX2Vycm9yJHJlc3BvbnNlMi5lcnJvcikgfHwgJ+acquefpemUmeivryd9YCk7CiAgICAgICAgICBjb25zb2xlLmVycm9yKGVycm9yKTsKICAgICAgICB9CiAgICAgIH0pLmNhdGNoKCgpID0+IHsKICAgICAgICAvLyDlj5bmtojliKDpmaQKICAgICAgfSk7CiAgICB9LAogICAgLy8g5qC85byP5YyW5paH5Lu25aSn5bCPCiAgICBmb3JtYXRGaWxlU2l6ZShzaXplKSB7CiAgICAgIGlmIChzaXplIDwgMTAyNCkgewogICAgICAgIHJldHVybiBzaXplICsgJyBCJzsKICAgICAgfSBlbHNlIGlmIChzaXplIDwgMTAyNCAqIDEwMjQpIHsKICAgICAgICByZXR1cm4gKHNpemUgLyAxMDI0KS50b0ZpeGVkKDIpICsgJyBLQic7CiAgICAgIH0gZWxzZSB7CiAgICAgICAgcmV0dXJuIChzaXplIC8gKDEwMjQgKiAxMDI0KSkudG9GaXhlZCgyKSArICcgTUInOwogICAgICB9CiAgICB9LAogICAgLy8g6I635Y+W5paH5Lu257G75Z6L5qCH562+CiAgICBnZXRGaWxlVHlwZUxhYmVsKHR5cGUpIHsKICAgICAgaWYgKHR5cGUuc3RhcnRzV2l0aCgnaW1hZ2UvJykpIHsKICAgICAgICByZXR1cm4gJ+WbvueJhyc7CiAgICAgIH0gZWxzZSBpZiAodHlwZSA9PT0gJ2FwcGxpY2F0aW9uL3BkZicpIHsKICAgICAgICByZXR1cm4gJ1BERic7CiAgICAgIH0gZWxzZSBpZiAodHlwZS5pbmNsdWRlcygnd29yZCcpKSB7CiAgICAgICAgcmV0dXJuICdXb3JkJzsKICAgICAgfSBlbHNlIGlmICh0eXBlLmluY2x1ZGVzKCdleGNlbCcpKSB7CiAgICAgICAgcmV0dXJuICdFeGNlbCc7CiAgICAgIH0gZWxzZSBpZiAodHlwZSA9PT0gJ3RleHQvcGxhaW4nKSB7CiAgICAgICAgcmV0dXJuICfmlofmnKwnOwogICAgICB9IGVsc2UgewogICAgICAgIHJldHVybiAn5YW25LuWJzsKICAgICAgfQogICAgfSwKICAgIC8vIOWIpOaWreaYr+WQpuS4uuWbvueJhwogICAgaXNJbWFnZSh0eXBlKSB7CiAgICAgIHJldHVybiB0eXBlLnN0YXJ0c1dpdGgoJ2ltYWdlLycpOwogICAgfSwKICAgIC8vIOWIpOaWreaYr+WQpuS4ulBERgogICAgaXNQZGYodHlwZSkgewogICAgICByZXR1cm4gdHlwZSA9PT0gJ2FwcGxpY2F0aW9uL3BkZic7CiAgICB9CiAgfQp9Ow=="},{"version":3,"names":["axios","name","data","fileList","selectedFile","uploading","loading","previewVisible","currentFile","created","fetchFileList","methods","response","get","files","error","$message","console","triggerFileInput","$refs","fileInput","click","handleFileChange","event","target","length","success","handleFileDrop","dataTransfer","uploadFile","warning","size","formData","FormData","append","post","headers","value","_error$response","previewFile","file","downloadFile","window","open","fileUrl","deleteFile","$confirm","confirmButtonText","cancelButtonText","type","then","fileName","split","pop","_error$response2","catch","formatFileSize","toFixed","getFileTypeLabel","startsWith","includes","isImage","isPdf"],"sources":["src/views/FileManager.vue"],"sourcesContent":["<template>\n  <div class=\"file-manager\">\n    <h1>文件管理</h1>\n    \n    <!-- 文件上传区域 -->\n    <div class=\"upload-area\">\n      <h2>上传文件</h2>\n      <div class=\"upload-box\" @click=\"triggerFileInput\" @dragover.prevent @drop.prevent=\"handleFileDrop\">\n        <input type=\"file\" ref=\"fileInput\" @change=\"handleFileChange\" style=\"display: none\" />\n        <div class=\"upload-icon\">\n          <i class=\"el-icon-upload\"></i>\n        </div>\n        <div class=\"upload-text\">\n          <span>点击或拖拽文件到此处上传</span>\n          <p>支持jpg, png, pdf等常见格式，单个文件不超过10MB</p>\n        </div>\n      </div>\n      <el-button type=\"primary\" @click=\"uploadFile\" :loading=\"uploading\" :disabled=\"!selectedFile\">\n        上传文件\n      </el-button>\n    </div>\n\n    <!-- 文件列表区域 -->\n    <div class=\"file-list\">\n      <h2>我的文件</h2>\n      <el-table :data=\"fileList\" style=\"width: 100%\" v-loading=\"loading\">\n        <el-table-column label=\"文件名\" prop=\"fileName\"></el-table-column>\n        <el-table-column label=\"类型\" width=\"120\">\n          <template slot-scope=\"scope\">\n            <span>{{ getFileTypeLabel(scope.row.fileType) }}</span>\n          </template>\n        </el-table-column>\n        <el-table-column label=\"大小\" width=\"120\">\n          <template slot-scope=\"scope\">\n            <span>{{ formatFileSize(scope.row.fileSize) }}</span>\n          </template>\n        </el-table-column>\n        <el-table-column label=\"上传时间\" width=\"180\" prop=\"uploadAt\"></el-table-column>\n        <el-table-column label=\"操作\" width=\"200\">\n          <template slot-scope=\"scope\">\n            <el-button type=\"text\" @click=\"previewFile(scope.row)\">预览</el-button>\n            <el-button type=\"text\" @click=\"downloadFile(scope.row)\">下载</el-button>\n            <el-button type=\"text\" class=\"danger-text\" @click=\"deleteFile(scope.row)\">删除</el-button>\n          </template>\n        </el-table-column>\n      </el-table>\n    </div>\n\n    <!-- 文件预览对话框 -->\n    <el-dialog title=\"文件预览\" :visible.sync=\"previewVisible\" width=\"70%\">\n      <div class=\"preview-container\" v-if=\"currentFile\">\n        <div v-if=\"isImage(currentFile.fileType)\">\n          <img :src=\"currentFile.fileUrl\" class=\"preview-image\" />\n        </div>\n        <div v-else-if=\"isPdf(currentFile.fileType)\">\n          <iframe :src=\"currentFile.fileUrl\" class=\"preview-frame\"></iframe>\n        </div>\n        <div v-else class=\"preview-unsupported\">\n          <p>此文件类型不支持预览，请下载后查看</p>\n          <el-button type=\"primary\" @click=\"downloadFile(currentFile)\">下载文件</el-button>\n        </div>\n      </div>\n    </el-dialog>\n  </div>\n</template>\n\n<script>\nimport axios from 'axios'\n\nexport default {\n  name: 'FileManager',\n  data() {\n    return {\n      fileList: [],\n      selectedFile: null,\n      uploading: false,\n      loading: false,\n      previewVisible: false,\n      currentFile: null\n    }\n  },\n  created() {\n    this.fetchFileList()\n  },\n  methods: {\n    // 获取文件列表\n    async fetchFileList() {\n      this.loading = true\n      try {\n        const response = await axios.get('/api/files')\n        this.fileList = response.data.files || []\n      } catch (error) {\n        this.$message.error('获取文件列表失败')\n        console.error(error)\n      } finally {\n        this.loading = false\n      }\n    },\n    \n    // 触发文件选择\n    triggerFileInput() {\n      this.$refs.fileInput.click()\n    },\n    \n    // 处理文件选择\n    handleFileChange(event) {\n      const files = event.target.files\n      if (files.length > 0) {\n        this.selectedFile = files[0]\n        this.$message.success(`已选择文件: ${this.selectedFile.name}`)\n      }\n    },\n    \n    // 处理文件拖放\n    handleFileDrop(event) {\n      const files = event.dataTransfer.files\n      if (files.length > 0) {\n        this.selectedFile = files[0]\n        this.$message.success(`已选择文件: ${this.selectedFile.name}`)\n      }\n    },\n    \n    // 上传文件\n    async uploadFile() {\n      if (!this.selectedFile) {\n        this.$message.warning('请先选择文件')\n        return\n      }\n      \n      // 检查文件大小\n      if (this.selectedFile.size > 10 * 1024 * 1024) {\n        this.$message.error('文件大小不能超过10MB')\n        return\n      }\n      \n      const formData = new FormData()\n      formData.append('file', this.selectedFile)\n      \n      this.uploading = true\n      try {\n        const response = await axios.post('/api/file/upload', formData, {\n          headers: {\n            'Content-Type': 'multipart/form-data'\n          }\n        })\n        \n        this.$message.success('文件上传成功')\n        this.selectedFile = null\n        this.$refs.fileInput.value = ''\n        this.fetchFileList() // 刷新文件列表\n      } catch (error) {\n        this.$message.error(`上传失败: ${error.response?.data?.error || '未知错误'}`)\n        console.error(error)\n      } finally {\n        this.uploading = false\n      }\n    },\n    \n    // 预览文件\n    previewFile(file) {\n      this.currentFile = file\n      this.previewVisible = true\n    },\n    \n    // 下载文件\n    downloadFile(file) {\n      window.open(file.fileUrl, '_blank')\n    },\n    \n    // 删除文件\n    async deleteFile(file) {\n      this.$confirm('确定要删除此文件吗?', '提示', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'warning'\n      }).then(async () => {\n        try {\n          const fileName = file.fileUrl.split('/').pop()\n          await axios.post(`/api/file/delete/${fileName}`)\n          this.$message.success('文件删除成功')\n          this.fetchFileList() // 刷新文件列表\n        } catch (error) {\n          this.$message.error(`删除失败: ${error.response?.data?.error || '未知错误'}`)\n          console.error(error)\n        }\n      }).catch(() => {\n        // 取消删除\n      })\n    },\n    \n    // 格式化文件大小\n    formatFileSize(size) {\n      if (size < 1024) {\n        return size + ' B'\n      } else if (size < 1024 * 1024) {\n        return (size / 1024).toFixed(2) + ' KB'\n      } else {\n        return (size / (1024 * 1024)).toFixed(2) + ' MB'\n      }\n    },\n    \n    // 获取文件类型标签\n    getFileTypeLabel(type) {\n      if (type.startsWith('image/')) {\n        return '图片'\n      } else if (type === 'application/pdf') {\n        return 'PDF'\n      } else if (type.includes('word')) {\n        return 'Word'\n      } else if (type.includes('excel')) {\n        return 'Excel'\n      } else if (type === 'text/plain') {\n        return '文本'\n      } else {\n        return '其他'\n      }\n    },\n    \n    // 判断是否为图片\n    isImage(type) {\n      return type.startsWith('image/')\n    },\n    \n    // 判断是否为PDF\n    isPdf(type) {\n      return type === 'application/pdf'\n    }\n  }\n}\n</script>\n\n<style scoped>\n.file-manager {\n  padding: 20px;\n}\n\n.upload-area {\n  margin-bottom: 30px;\n  padding: 20px;\n  background-color: #f5f7fa;\n  border-radius: 4px;\n}\n\n.upload-box {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  height: 200px;\n  border: 2px dashed #dcdfe6;\n  border-radius: 6px;\n  cursor: pointer;\n  margin-bottom: 20px;\n  transition: all 0.3s;\n}\n\n.upload-box:hover {\n  border-color: #409eff;\n}\n\n.upload-icon {\n  font-size: 48px;\n  color: #909399;\n  margin-bottom: 10px;\n}\n\n.upload-text {\n  text-align: center;\n}\n\n.upload-text span {\n  font-size: 16px;\n  color: #606266;\n}\n\n.upload-text p {\n  margin-top: 10px;\n  color: #909399;\n  font-size: 14px;\n}\n\n.preview-container {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  min-height: 300px;\n}\n\n.preview-image {\n  max-width: 100%;\n  max-height: 500px;\n}\n\n.preview-frame {\n  width: 100%;\n  height: 500px;\n  border: none;\n}\n\n.preview-unsupported {\n  text-align: center;\n  padding: 30px;\n}\n\n.danger-text {\n  color: #f56c6c;\n}\n</style>\n"],"mappings":"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","ignoreList":[]}]}